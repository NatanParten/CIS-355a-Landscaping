
import java.awt.Color;
import java.sql.*;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author parte
 */
public class LandscapeGUI extends javax.swing.JFrame {

    /**
     * Creates new form LandscapeGUI
     */
    // class level references
    DefaultListModel<Customer> customerList = new DefaultListModel();
    private final double GRASS_PER_SQFT = 5.00;
    private final double GRAVEL_PER_SQFT = 2.00;

    public LandscapeGUI() {
        initComponents();
        loadCustomers();

        //center the form
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.lightGray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgYardType = new javax.swing.ButtonGroup();
        tabMain = new javax.swing.JTabbedPane();
        pnlWelcome = new javax.swing.JPanel();
        lblGrassCost = new javax.swing.JLabel();
        lblGravelCost = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        rdoGrass = new javax.swing.JRadioButton();
        rdoGravel = new javax.swing.JRadioButton();
        lblImage = new javax.swing.JLabel();
        lblCompanyName = new javax.swing.JLabel();
        lblLandType = new javax.swing.JLabel();
        pnlInformation = new javax.swing.JPanel();
        lblLength = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        lblOrderSum = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scrOrderSum = new javax.swing.JTextArea();
        btnOrder = new javax.swing.JButton();
        lblCompanyName1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEnterInfo = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblEnterInfo1 = new javax.swing.JLabel();
        lblWidth = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        pnlCustomerList = new javax.swing.JPanel();
        lblCompanyName2 = new javax.swing.JLabel();
        lblCustomerList = new javax.swing.JLabel();
        lblCustomerDetails = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaCustomerInfo = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstCustomers = new javax.swing.JList<>();
        mnbMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        mniSubmitOrder = new javax.swing.JMenuItem();
        mniReset = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nathan Parten Landscaping");

        lblGrassCost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblGrassCost.setText("$5 per sqft");
        lblGrassCost.setToolTipText("");

        lblGravelCost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblGravelCost.setText("$2 per sqft");
        lblGravelCost.setToolTipText("");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGrass);
        rdoGrass.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdoGrass.setText("Grass");
        rdoGrass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGrassActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGravel);
        rdoGravel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rdoGravel.setText("Gravel");
        rdoGravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGravelActionPerformed(evt);
            }
        });

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dirt.jpg"))); // NOI18N

        lblCompanyName.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblCompanyName.setText("Nathan Parten Landscapes");
        lblCompanyName.setAlignmentY(0.0F);

        lblLandType.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblLandType.setText("Would you like a grass or gravel ?");

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlWelcomeLayout.createSequentialGroup()
                            .addComponent(lblGrassCost)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGravelCost)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlWelcomeLayout.createSequentialGroup()
                            .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlWelcomeLayout.createSequentialGroup()
                                    .addComponent(rdoGrass)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rdoGravel))
                                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLandType)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(204, 204, 204)))
                .addGap(93, 93, 93))
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(lblLandType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoGrass)
                    .addComponent(rdoGravel))
                .addGap(18, 18, 18)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGravelCost)
                    .addComponent(lblGrassCost))
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        tabMain.addTab("Welcome", pnlWelcome);

        lblLength.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblLength.setText("Length (ft):");
        lblLength.setToolTipText("");

        txtLength.setColumns(5);
        txtLength.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtLength.setName(""); // NOI18N
        txtLength.setNextFocusableComponent(btnCalculate);

        btnCalculate.setText("Calculate");
        btnCalculate.setNextFocusableComponent(btnOrder);
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblOrderSum.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblOrderSum.setText("Order Summary:");

        scrOrderSum.setColumns(20);
        scrOrderSum.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        scrOrderSum.setRows(5);
        jScrollPane1.setViewportView(scrOrderSum);

        btnOrder.setText("Submit Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        lblCompanyName1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblCompanyName1.setText("Nathan Parten Landscapes");
        lblCompanyName1.setAlignmentY(0.0F);

        lblName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblName.setText("Name:");
        lblName.setToolTipText("");

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtName.setFocusCycleRoot(true);
        txtName.setNextFocusableComponent(txtAddress);

        lblEnterInfo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblEnterInfo.setText("Please enter your information:");

        lblAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblAddress.setText("Address:");
        lblAddress.setToolTipText("");

        txtAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAddress.setNextFocusableComponent(txtWidth);

        lblEnterInfo1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblEnterInfo1.setText("Enter the length and width of you yard:");

        lblWidth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblWidth.setText("Width (ft):");
        lblWidth.setToolTipText("");

        txtWidth.setColumns(5);
        txtWidth.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWidth.setNextFocusableComponent(txtLength);

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addComponent(lblWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(lblLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblEnterInfo1)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName)
                                    .addComponent(lblAddress))
                                .addGap(58, 58, 58)
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblEnterInfo)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                                .addComponent(lblOrderSum)
                                .addGap(57, 57, 57))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(lblCompanyName1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblCompanyName1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblEnterInfo)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblEnterInfo1)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWidth)
                            .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLength)
                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblOrderSum)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        tabMain.addTab("Information", pnlInformation);

        lblCompanyName2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lblCompanyName2.setText("Nathan Parten Landscapes");
        lblCompanyName2.setAlignmentY(0.0F);

        lblCustomerList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCustomerList.setText("Customer List");

        lblCustomerDetails.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCustomerDetails.setText("Customer Details");

        btnLoad.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLoad.setText("Load List");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnDelete.setText("Delete Customer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txaCustomerInfo.setColumns(20);
        txaCustomerInfo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txaCustomerInfo.setRows(5);
        jScrollPane2.setViewportView(txaCustomerInfo);

        lstCustomers.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lstCustomers.setModel(customerList);
        lstCustomers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomersValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstCustomers);

        javax.swing.GroupLayout pnlCustomerListLayout = new javax.swing.GroupLayout(pnlCustomerList);
        pnlCustomerList.setLayout(pnlCustomerListLayout);
        pnlCustomerListLayout.setHorizontalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(lblCompanyName2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(btnLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(91, 91, 91))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(lblCustomerList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCustomerDetails)
                .addGap(108, 108, 108))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        pnlCustomerListLayout.setVerticalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblCompanyName2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerList)
                    .addComponent(lblCustomerDetails))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoad)
                    .addComponent(btnDelete))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        tabMain.addTab("Customer List", pnlCustomerList);

        mnuFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        mnbMain.add(mnuFile);

        mnuOrder.setText("Order");

        mniSubmitOrder.setText("Submit Order");
        mniSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSubmitOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniSubmitOrder);

        mniReset.setText("Reset");
        mniReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniResetActionPerformed(evt);
            }
        });
        mnuOrder.add(mniReset);

        mnbMain.add(mnuOrder);

        setJMenuBar(mnbMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        // exit the application
        System.exit(0);

    }//GEN-LAST:event_mniExitActionPerformed

    private void mniSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSubmitOrderActionPerformed

        submitOrder();

    }//GEN-LAST:event_mniSubmitOrderActionPerformed

    private void mniResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniResetActionPerformed

        reset();
    }//GEN-LAST:event_mniResetActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // confirm that a selection was made then move to next tab
        if (rdoGrass.isSelected() == false && rdoGravel.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            tabMain.setSelectedIndex(1);
        }

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void rdoGrassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGrassActionPerformed
        if (rdoGrass.isSelected()) {
            // look in directory where class exists, and get location of "grass.jpg"
            URL location = this.getClass().getResource("grass.jpg");

            // create image using the location of "grass.jpg"
            ImageIcon icon = new ImageIcon(location);

            // set the image icon to the label
            lblImage.setIcon(icon);
        }
    }//GEN-LAST:event_rdoGrassActionPerformed

    private void rdoGravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGravelActionPerformed
        if (rdoGravel.isSelected()) {
            // find image, create image icon, and set image icon to label
            lblImage.setIcon(new ImageIcon(this.getClass().getResource("gravel.jpg")));
        }
    }//GEN-LAST:event_rdoGravelActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        // validate the inputs
        if (validateInputs() == false) {
            return;      // end the method if validation failed
        }
        // create the Customer object and show the information
        Customer cust = createCustomer();
        scrOrderSum.setText(cust.getDetails());
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        submitOrder();

    }//GEN-LAST:event_btnOrderActionPerformed

    private void lstCustomersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomersValueChanged
        // get selected item’s index number
        int index = lstCustomers.getSelectedIndex();

        // if something was selected, show the object’s details
        if (index > -1) {
            Customer cust = customerList.getElementAt(index);
            txaCustomerInfo.setText(cust.getDetails());
        }

    }//GEN-LAST:event_lstCustomersValueChanged

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        loadCustomers();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // get the selected object
            Customer old = lstCustomers.getSelectedValue();

            // if something is selected, delete it and clear the details textarea
            if (old != null) {
                DataIO data = new DataIO();
                data.delete(old.getCustomerID());   // get the name only
                txaCustomerInfo.setText("");
                loadCustomers();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandscapeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgYardType;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnReset;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblCompanyName1;
    private javax.swing.JLabel lblCompanyName2;
    private javax.swing.JLabel lblCustomerDetails;
    private javax.swing.JLabel lblCustomerList;
    private javax.swing.JLabel lblEnterInfo;
    private javax.swing.JLabel lblEnterInfo1;
    private javax.swing.JLabel lblGrassCost;
    private javax.swing.JLabel lblGravelCost;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLandType;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOrderSum;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JList<Customer> lstCustomers;
    private javax.swing.JMenuBar mnbMain;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniReset;
    private javax.swing.JMenuItem mniSubmitOrder;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JPanel pnlCustomerList;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JRadioButton rdoGrass;
    private javax.swing.JRadioButton rdoGravel;
    private javax.swing.JTextArea scrOrderSum;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTextArea txaCustomerInfo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    private void reset() {
        tabMain.setSelectedIndex(0);
        // clear the radiobutton selection
        btgYardType.clearSelection();
        // put the image back to "Dirt"
        lblImage.setIcon(new ImageIcon(
                this.getClass().getResource("dirt.jpg")));
        txtName.setText("");
        this.txtName.requestFocusInWindow();
        txtAddress.setText("");
        txtLength.setText("");
        txtWidth.setText("");
        scrOrderSum.setText("");

    }

    private boolean validateInputs() {
        // get inputs from user using the textboxes
        String sName = txtName.getText();
        String sAddress = txtAddress.getText();
        String sWidth = txtWidth.getText();
        String sLength = txtLength.getText();

        // confirm that a radiobutton has been selected
        if (btgYardType.getSelection() == null) {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select the type of yard.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // make sure we have a name for the order
        if (sName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Name",
                    "Name Error", JOptionPane.ERROR_MESSAGE);
            txtName.requestFocusInWindow();
            return false;
        }

        // make sure we have an address for the order
        if (sAddress.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Address",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sAddress.length() < 6) {
            JOptionPane.showMessageDialog(this, "Address must be six characters or more.",
                    "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        if (sWidth.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Width",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.requestFocusInWindow();
            return false;
        }

        // check to see if the width is a valid number
        try {
            Double.parseDouble(sWidth);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Width must be a number",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.setText("");
            txtWidth.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sWidth) <= 0) {
            JOptionPane.showMessageDialog(this, "Width must be greater than 0",
                    "Width Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (sLength.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter a Length",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.requestFocusInWindow();
            return false;
        }

        try {
            Double.parseDouble(sLength);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Length must be a number",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        if (Double.parseDouble(sLength) <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Length must be must be greater than 0",
                    "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        // all is good so return true
        return true;
    }

    private Customer createCustomer() {
        String name = txtName.getText();
        String address = txtAddress.getText();
        double width = Double.parseDouble(txtWidth.getText());
        double length = Double.parseDouble(txtLength.getText());
        String yardType = "";
        double totalCost = 0.0;

        if (rdoGrass.isSelected()) {
            yardType = "Grass";
            totalCost = GRASS_PER_SQFT * width * length;
        } else if (rdoGravel.isSelected()) {
            yardType = "Gravel";
            totalCost = GRAVEL_PER_SQFT * width * length;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Error. Please select a yard type.");
            totalCost = 0.0;
        }

        Customer cust = new Customer(0, name, address, yardType,
                length, width, totalCost);
        return cust;
    }

    private void submitOrder() {
        if (validateInputs() == false) {
            return;    // end the method if validation failed
        }

        Customer cust = createCustomer();
        customerList.addElement(cust);
        scrOrderSum.setText(cust.getDetails());

        try {
            DataIO data = new DataIO(); // create DataIO object
            data.add(cust);
            loadCustomers();  // load all customers

            // reset for the next customer
            reset();

            //move to the client orders tab
            tabMain.setSelectedIndex(2);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Driver Not Found Error: " + ex.getMessage(),
                    "Database Driver Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void loadCustomers() {
        try {
            DataIO data = new DataIO(); // create DataIO object
            ArrayList<Customer> customers = data.getList();

            // clear out the DefaultListModel and textarea
            customerList.clear();
            scrOrderSum.setText("");

            // copy each object from the ArrayList over to the DefaultListModel
            for (int i = 0; i < customers.size(); i++) {
                customerList.addElement(customers.get(i));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

}
